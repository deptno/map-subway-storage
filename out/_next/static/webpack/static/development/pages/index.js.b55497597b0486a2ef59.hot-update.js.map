{"version":3,"file":"static/webpack/static/development/pages/index.js.b55497597b0486a2ef59.hot-update.js","sources":["webpack:///./src/components/header/Header.tsx","webpack:///./src/pages/index.tsx"],"sourcesContent":["import React, {FunctionComponent} from 'react'\nimport Link from 'next/link'\n\nexport const Header: FunctionComponent<Props> = props => {\n  return (\n    <header className=\"flex f3 pa3\">\n      <h1 className=\"ph2 ph0-ns f5\">지하철 물품보관함(해피박스) 위치</h1>\n      <div className=\"ml-auto flex items-center justify-between\">\n        <a className=\"link black mh3\" href=\"https://github.com/deptno/petitions\" target=\"_blank\">\n          <i className=\"fab fa-github black-70 \"/>\n        </a>\n        <a className=\"link black-70\" href=\"http://bglee.me#petitions\" target=\"_blank\">\n        <span className=\"f6 db underline b\">\n          about\n        </span>\n        </a>\n      </div>\n    </header>\n  )\n}\n\ntype Props = {}\n","import React, {useEffect, useMemo, useState} from 'react'\nimport {UlHappyBoxes} from '../components/ul/UlHappyBoxes'\nimport {MapContext} from '../context/map'\nimport {Header} from '../components/header/Header'\n\nexport default () => {\n  const [boxes, setBoxes] = useState([])\n  const [mount, setMount] = useState(false)\n  const map = useMemo(() => {\n    if (mount) {\n      return new kakao.maps.Map(document.getElementById('map'), {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3,\n      })\n    }\n  }, [mount])\n\n  useEffect(() => {\n    fetch(location.pathname + 'static/json/storage.json')\n      .then(response => response.json())\n      .then(setBoxes)\n    setMount(true)\n  }, [])\n\n  const [station, select] = useState<string>('역을 선택하세요.')\n\n  return (\n    <MapContext.Provider value={map}>\n      <div className=\"relative\">\n        <div className=\"fixed ph3-ns w-100\">\n          <Header/>\n          <div className=\"flex\" style={{height: '300px'}}>\n            <div id=\"map\" style={{width: '100%', height: '300px'}}/>\n          </div>\n          <p className=\"ph2 pv1 br2 bg-black white\">{station}</p>\n        </div>\n        <div className=\"relative\" style={{height: '400px'}}/>\n        <div className=\"overflow-scroll w-100 ph3\" style={{height: 'calc(100vh - 350px)'}}>\n          <UlHappyBoxes data={boxes} station={station} onClick={select}/>\n        </div>\n      </div>\n    </MapContext.Provider>\n  )\n}\n"],"mappingsnBA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAlBA;AAAA;AAAA;AACA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}